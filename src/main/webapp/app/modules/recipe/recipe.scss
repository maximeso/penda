// --------------------------------------------------
// Variables used throughout the theme
// --------------------------------------------------
$primary: #222222 !default;
$secondary: #ffffff !default;
$tertiary: #0088cc !default;
$quaternary: #e45735 !default;
$header_background: #ffffff !default;
$header_primary: #333333 !default;
$highlight: #ffff4d !default;
$danger: #e45735 !default;
$success: #009900 !default;
$love: #fa6c8d !default;

// Layout dimensions
// --------------------------------------------------

$small-width: 800px !default;
$medium-width: 995px !default;
$large-width: 1110px !default;

$input-padding: 4px 10px;

// Brand color variables
// --------------------------------------------------

$google: #ffffff !default;
$instagram: #125688 !default;
$facebook: #3b5998 !default;
$cas: #70ba61 !default;
$twitter: #00bced !default;
$yahoo: #810293 !default;
$github: #6d6d6d !default;

// Badge color variables
// --------------------------------------------------

$gold: rgb(231, 195, 0) !default;
$silver: #c0c0c0 !default;
$bronze: #cd7f32 !default;

// Fonts
// --------------------------------------------------

$base-font-size-smaller: 14px !default;
$base-font-size: 15px !default;
$base-font-size-larger: 17px !default;
$base-font-size-largest: 19px !default;
$base-font-family: Helvetica, Arial, sans-serif !default;

// Font-size defintions, multiplier ^ (step / interval)
$font-up-6: 2.296em;
$font-up-5: 2em;
$font-up-4: 1.7511em;
$font-up-3: 1.5157em;
$font-up-2: 1.3195em;
$font-up-1: 1.1487em; // 2^(1/5)
$font-0: 1em;
$font-down-1: 0.8706em; // 2^(-1/5)
$font-down-2: 0.7579em; // Smallest size we use based on the 1em base
$font-down-3: 0.6599em;
$font-down-4: 0.5745em;
$font-down-5: 0.5em;
$font-down-6: 0.4355em;

// Common line-heights
$line-height-small: 1;
$line-height-medium: 1.2; // Headings or large text
$line-height-large: 1.4; // Normal or small text

// These files don't actually exist. They're injected by Stylesheet::Compiler.
// --------------------------------------------------

// Z-index
// --------------------------------------------------

$z-layers: (
  'max': 9999,
  'modal': (
    'tooltip': 1600,
    'popover': 1500,
    'dropdown': 1400,
    'content': 1300,
    'overlay': 1200
  ),
  'fullscreen': 1150,
  'mobile-composer': 1100,
  'header': 1000,
  'tooltip': 600,
  'composer': (
    'dropdown': 700,
    'tooltip': 600,
    'popover': 500,
    'content': 400
  ),
  'dropdown': 300,
  'usercard': 200,
  'timeline': 100,
  'base': 1
);

@function map-has-nested-keys($map, $keys...) {
  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @return false;
    }
    $map: map-get($map, $key);
  }
  @return true;
}

@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    $map: map-get($map, $key);
  }
  @return $map;
}

@function z($layers...) {
  @if not map-has-nested-keys($z-layers, $layers...) {
    @warn "No layer defined for `#{inspect($layers...)}` in $z-layers map. Check variables.scss, property omitted.";
  }
  @return map-deep-get($z-layers, $layers...);
}

// Box-shadow
// --------------------------------------------------

// Color utilities
// --------------------------------------------------

// w3c definition of color brightness https://www.w3.org/TR/AERT#color-contrast
@function dc-color-brightness($color) {
  @return ((red($color) * 0.299) + (green($color) * 0.587) + (blue($color) * 0.114));
}

// Uses an approximation of sRGB blending, GAMMA=2 instead of GAMMA=2.2
@function srgb-scale($foreground, $background, $percent) {
  $ratio: ($percent / 100%);
  $iratio: 1 - $ratio;
  $f_r2: red($foreground) * red($foreground);
  $f_g2: green($foreground) * green($foreground);
  $f_b2: blue($foreground) * blue($foreground);
  $b_r2: red($background) * red($background);
  $b_g2: green($background) * green($background);
  $b_b2: blue($background) * blue($background);
  $r_r2: $f_r2 * $ratio + $b_r2 * $iratio;
  $r_g2: $f_g2 * $ratio + $b_g2 * $iratio;
  $r_b2: $f_b2 * $ratio + $b_b2 * $iratio;
  @return rgb($r_r, $r_g, $r_b);
}

// Replaces dark-light-diff($primary, $secondary, 50%, -50%)
@function blend-primary-secondary($percent) {
  @return srgb-scale($primary, $secondary, $percent);
}

@function dark-light-diff($adjusted-color, $comparison-color, $lightness, $darkness) {
  @if dc-color-brightness($adjusted-color) < dc-color-brightness($comparison-color) {
    @return scale-color($adjusted-color, $lightness: $lightness);
  } @else {
    @return scale-color($adjusted-color, $lightness: $darkness);
  }
}
@function dark-light-choose($light-theme-result, $dark-theme-result) {
  @if dc-color-brightness($primary) < dc-color-brightness($secondary) {
    @return $light-theme-result;
  } @else {
    @return $dark-theme-result;
  }
}

// standard color transformations, use these if possible, and add any new dark-light-diffs here

//primary
$primary-very-low: dark-light-diff($primary, $secondary, 97%, -82%);
$primary-low: dark-light-diff($primary, $secondary, 90%, -78%);
$primary-low-mid: dark-light-diff($primary, $secondary, 70%, -45%);
$primary-medium: dark-light-diff($primary, $secondary, 50%, -35%);
$primary-high: dark-light-diff($primary, $secondary, 30%, -25%);
$primary-very-high: dark-light-diff($primary, $secondary, 15%, -10%);

//header_primary
$header_primary-low: dark-light-diff($header_primary, $header_background, 90%, -78%);
$header_primary-low-mid: dark-light-diff($header_primary, $header_background, 70%, -45%);

$header_primary-medium: dark-light-diff($header_primary, $header_background, 50%, -35%);
$header_primary-high: dark-light-diff($header_primary, $header_background, 30%, -25%);
$header_primary-very-high: dark-light-diff($header_primary, $header_background, 15%, -10%);

//secondary
$secondary-low: dark-light-diff($secondary, $primary, 70%, -70%);
$secondary-medium: dark-light-diff($secondary, $primary, 50%, -50%);
$secondary-high: dark-light-diff($secondary, $primary, 30%, -35%);
$secondary-very-high: dark-light-diff($secondary, $primary, 7%, -7%);

//tertiary
$tertiary-low: dark-light-diff($tertiary, $secondary, 85%, -65%);
$tertiary-medium: dark-light-diff($tertiary, $secondary, 50%, -45%);
$tertiary-high: dark-light-diff($tertiary, $secondary, 20%, -25%);

//quaternary
$quaternary-low: dark-light-diff($quaternary, $secondary, 70%, -70%);

//highlight
$highlight-low: dark-light-diff($highlight, $secondary, 70%, -80%);
$highlight-medium: dark-light-diff($highlight, $secondary, 50%, -55%);
$highlight-high: dark-light-diff($highlight, $secondary, -50%, -10%);

//danger
$danger-low: dark-light-diff($danger, $secondary, 85%, -64%);
$danger-medium: dark-light-diff($danger, $secondary, 30%, -35%);

//success
$success-low: dark-light-diff($success, $secondary, 80%, -60%);
$success-medium: dark-light-diff($success, $secondary, 50%, -40%);

//love
$love-low: dark-light-diff($love, $secondary, 85%, -60%);

//wiki
$wiki: green;

.list-controls {
  .nav {
    float: left;
    margin-bottom: 10px;
  }

  .btn {
    float: right;
    margin-left: 8px;
    margin-bottom: 10px;
    font-size: $font-up-1;
    font-weight: normal;
  }

  .search .btn {
    float: none;
  }

  a.badge-category {
    padding: 3px 12px;
    font-size: $font-up-1;
  }
}

// Base list
// --------------------------------------------------

.topic-list-icons {
  .d-icon-thumbtack {
    color: dark-light-choose($primary-medium, $secondary-medium);
  }
  .d-icon-thumbtack.unpinned {
    color: dark-light-choose($primary-medium, $secondary-medium);
  }
  a.title {
    color: $primary;
  }
  .d-icon-bookmark {
    color: dark-light-choose($primary-medium, $secondary-medium);
  }
}

.topic-list {
  @extend .topic-list-icons;

  margin: 0 0 10px;
  th,
  td {
    padding: 12px 5px;
    &:first-of-type {
      padding-left: 10px;
    }
    &:last-of-type {
      padding-right: 10px;
      text-align: center;
    }
  }
  th {
    button .d-icon {
      color: dark-light-choose($primary-medium, $secondary-medium);
    }
  }

  button.bulk-select {
    padding: 0;
  }

  td.bulk-select {
    padding: 10px;
    width: 30px;
    + .main-link {
      padding-left: 0;
    }
  }

  .badge-notification {
    position: relative;
    top: -2px;
    &.new-topic {
      top: -1px;
      padding-left: 5px;
    }
  }

  .posters {
    // we know there are up to 5 avatars of fixed size
    // will be overridden by media width queries on narrow displays to 1 avatar's width
    width: 146px;
    text-align: center;

    > a {
      float: left;
      margin-right: 4px;
      &:last-of-type {
        margin-right: 0;
      }
    }
  }
  td.posters {
    height: 29px; // min-height of td with avatar glow
  }
  .posters a:first-child .avatar.latest:not(.single) {
    box-shadow: 0 0 3px 1px desaturate($tertiary-medium, 35%);
    border: 2px solid desaturate($tertiary-medium, 40%);
    position: relative;
    top: -2px;
    left: -2px;
  }

  .sortable {
    cursor: pointer;
    &:hover {
      background-color: $primary-low;
    }
  }
  .likes {
    width: 65px;
  }
  .views {
    width: 65px;
  }
  .posts {
    width: 65px;
  }

  .post-actions {
    clear: both;
    width: auto;
    color: dark-light-choose($primary-medium, $secondary-medium);
    text-align: left;
    font-size: $font-down-1;
    margin-top: 5px;
    .fa {
      margin-right: 2px;
    }
    a {
      color: dark-light-choose($primary-medium, $secondary-medium);
      margin-right: 3px;
      line-height: $line-height-large;
    }
  }
  .activity {
    width: 60px;
    &:lang(zh_CN) {
      width: 80px;
    }
    span {
      cursor: pointer;
    }
  }
  .age {
    width: 60px;
  }
  .with-year {
    white-space: nowrap;
  }
}

.topic-list-bottom {
  margin: 20px 0;
}

// Misc. stuff
// --------------------------------------------------

#list-area .top-lists h2 {
  cursor: pointer;
  margin: 5px 0 10px;
}

#list-area {
  h2 {
    margin: 20px 0 10px;
  }
  .show-more.has-topics {
    top: 0;
    .alert {
      padding: 12px 35px 12px 14px;
    }
  }
}

#bulk-select {
  position: fixed;
  right: 20px;
  top: 130px;
  padding: 5px;
  background-color: $secondary;
  z-index: z('dropdown');
}

button.dismiss-read {
  float: right;
  margin-bottom: 5px;
  margin-left: 10px;
}

.tags-admin-menu {
  .dropdown-menu {
    right: 0;
    top: 30px;
    bottom: auto;
    left: auto;
  }
}

.category-heading {
  p {
    line-height: $line-height-large;
    font-size: $font-up-3;
  }
}

.category-navigation {
  clear: both;
}

.category-logo.aspect-image {
  float: left;
  margin: 0.25em 1em 0.5em 0;

  img {
    width: auto;
    max-height: 150px;
  }
}

@supports (--custom: property) {
  .category-logo.aspect-image {
    --max-height: 150px;
    max-height: var(--max-height);
    max-width: 60%;
    height: auto;
    width: calc(var(--max-height) * var(--aspect-ratio));

    img {
      width: 100%;
      height: inherit;
      max-width: initial;
      max-height: initial;
    }
  }
}

tr {
  border-bottom: 1px solid $primary-low;
  &.highlighted {
    animation: background-fade-highlight 2.5s ease-out;
  }
}

.wrapper {
  margin-right: auto;
  display: flex;
  flex-direction: column;
  align-content: center;
  justify-content: center;
  margin-left: auto;
}
